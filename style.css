/* Reset basique */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background: #000;
  font-family: sans-serif;
  color: #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

/* Container principal */
.player {
  position: relative;
  width: 600px; /* Valeur par défaut */
  height: 100px;
  overflow: hidden;
}

/* Arrière-plan flou / étiré */
.bg-blur {
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background-size: cover;
  background-position: center;
  filter: blur(8px);
  transform: scale(1.2);
  opacity: 0.6;
  z-index: 1;
}
.bg-blur::after {
  content: "";
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: rgba(0, 0, 0, 0.8);
  pointer-events: none;
}

/* Contenu (pochette, infos) */
.player-content {
  position: relative;
  z-index: 2;
  display: flex;
  /* Pour que la pochette prenne toute la hauteur possible */
  align-items: stretch;
  height: 100%;
  padding: 0 10px;
}

/* Pochette album */
.cover-art {
  /* Ratio 1:1 pour qu'elle reste carrée */
  aspect-ratio: 1 / 1;
  background-size: cover;
  background-position: center;
  margin-right: 10px;
  min-width: 80px;    /* Largeur mini de la pochette */
  flex: 0 0 auto;     /* Empêche de s'étirer/s'écraser */
}

/* Bloc texte + barre */
.info-bar {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex: 1;
  min-width: 0; /* Permet au texte de s'ajuster si trop long */
}

/* Titre (fait défiler si trop long, mais on active l'anim en JS si besoin) */
.track-name {
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  width: 100%;
  height: 1.4em;
  margin-bottom: 4px;
}
.track-name span {
  display: inline-block;
  /* Par défaut, on ne met pas d'animation, on l'activera en JS */
  animation: none;
  padding-left: 0;
}

/* Artiste */
.artist-name {
  font-size: 0.9rem;
  margin-bottom: 6px;
  opacity: 0.9;
}

/* time-row : conteneur pour la barre + timer */
.time-row {
  position: relative;
  margin-top: 6px;
  /* vous pouvez ajuster la hauteur si vous voulez
     plus ou moins d'espace. */
  height: 24px;
}

/* Barre de progression */
#time-bar-bg {
  position: absolute;
  left: 0;
  bottom: 0;    /* collée en bas du time-row */
  width: 100%;
  height: 10px;
  background: #444;
  border-radius: 4px;
  overflow: hidden;
}

/* On part d’une barre pleine (width=100%) et on réduit vers 0% */
.time-bar-fill {
  position: absolute;
  left: 0; 
  top: 0;
  height: 100%;
  width: 100%; /* départ: 100% -> 0% */
  background: #0f0;
  transition: width 0.5s linear;
}

/* Timer: on le place en haut à droite, au-dessus de la barre */
.time-remaining {
  position: absolute;
  right: 8px;
  /* On veut qu'il soit au-dessus (physiquement) de la barre:
     on peut par ex. le mettre bottom: 12px; ou top: 0. 
     Ici, on choisit top: 0. */
  top: 0;
  z-index: 2;
  font-size: 0.9rem;
  font-weight: bold;
  pointer-events: none;
}

/**************************************************************
 * Animations "slide in" (arrivée)
 **************************************************************/
@keyframes slideInLeft {
  from {
    transform: translateX(-150%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slideInRight {
  from {
    transform: translateX(150%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes slideInTop {
  from {
    transform: translateY(-50%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Classes utilitaires qu'on applique en JS */
.slide-in-left {
  animation: slideInLeft 1.5s forwards;
}
.slide-in-right {
  animation: slideInRight 1.5s forwards;
}
.slide-in-top {
  animation: slideInTop 1.5s forwards;
}

/* Animation de défilement du titre (si besoin en JS) */
@keyframes marquee {
  0%   { transform: translateX(0); }
  100% { transform: translateX(-100%); }
}
